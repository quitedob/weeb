# 前端API使用问题修复计划

## 问题概述
通过分析Vue前端视图文件和后端API文档，发现前端视图使用的API与后端API文档中定义的API存在多处不一致，需要修复前端API调用以匹配后端API。

## 主要问题分类

### 1. 认证相关API问题 ✅ 已完成
- **问题**: `auth.js`中的`getUserInfo()`方法使用了错误的API路径
  - 当前使用: `/api/user/info`
  - 应该使用: `/api/auth/me` 或 `/api/users/me`
- **问题**: `auth.js`中的`updateUserInfo()`方法使用了错误的API路径
  - 当前使用: `/api/user/info`
  - 应该使用: `/api/users/me`

### 2. 用户管理API问题 ✅ 已完成
- **问题**: `user.js`中存在重复的API方法定义
  - `getUserInfo()`和`updateUserInfo()`在`user.js`和`auth.js`中都有定义
- **问题**: `user.js`中的`getUserList()`使用了错误的API路径
  - 当前使用: `/api/list`
  - 应该使用: `/api/users`

### 3. 聊天相关API问题 ✅ 已完成
- **问题**: `chat.js`中的`getChatList()`方法使用了错误的API路径
  - 当前使用: `/api/contacts`
  - 应该使用: `/api/v1/chats`
- **问题**: `chat.js`中的`getChatMessages()`方法使用了错误的API路径
  - 当前使用: 通过`messageApi.getChatRecord()`
  - 应该使用: `/api/v1/chats/{chatId}/messages`
- **问题**: `chat.js`中的`sendMessage()`方法使用了错误的API路径
  - 当前使用: 通过`messageApi.sendMessage()`
  - 应该使用: `/api/v1/chats/{chatId}/messages`

### 4. 群组相关API问题 ✅ 已完成
- **问题**: `Groups.vue`中使用了错误的API调用方式
  - 当前使用: `api.group.joinGroup({ groupId })`
  - 应该使用: `api.group.applyToJoinGroup({ groupId })`

### 5. 文章相关API问题 ✅ 已完成
- **问题**: `Explore.vue`中使用了错误的API方法
  - 当前使用: `articleApi.getRecommendedArticles()`
  - 应该使用: `articleApi.getRecommendedArticles()`但参数格式不匹配

### 6. 聊天页面API问题 ✅ 已完成
- **问题**: `NewChatWindow.vue`中使用了不存在的API函数
  - 当前使用: `getChatHistoryApi`函数，但在`message.js`中不存在
  - 应该使用: `getChatRecord`函数或创建新的`getChatHistoryApi`函数
- **问题**: `NewChatWindow.vue`中使用了错误的API路径
  - 当前使用: `/api/v1/message/send`和`/api/v1/message/record`
  - 应该使用: `/api/v1/chats/{chatId}/messages`和`/api/v1/chats/{chatId}/messages`
- **问题**: `NewChatWindow.vue`中使用了错误的参数格式
  - 当前使用: `{recipientId, recipientType, page, pageSize}`
  - 应该使用: `{chatId, page, size}`

## 修复计划

### 阶段1: 修复认证相关API ✅ 已完成
1. 修改`auth.js`中的`getUserInfo()`方法，使用正确的API路径
2. 修改`auth.js`中的`updateUserInfo()`方法，使用正确的API路径
3. 统一`auth.js`和`user.js`中的重复方法定义

### 阶段2: 修复用户管理API ✅ 已完成
1. 修改`user.js`中的`getUserList()`方法，使用正确的API路径
2. 删除重复的API方法定义
3. 确保所有用户相关的API调用使用正确的路径

### 阶段3: 修复聊天相关API ✅ 已完成
1. 修改`chat.js`中的`getChatList()`方法，使用正确的API路径
2. 修改`chat.js`中的`getChatMessages()`方法，使用正确的API路径
3. 修改`chat.js`中的`sendMessage()`方法，使用正确的API路径
4. 更新`ChatWindow.vue`中的API调用

### 阶段4: 修复群组相关API ✅ 已完成
1. 修改`Groups.vue`中的API调用，使用正确的方法名
2. 确保所有群组相关的API调用使用正确的路径

### 阶段5: 修复文章相关API ✅ 已完成
1. 检查并修复`Explore.vue`中的API调用
2. 确保所有文章相关的API调用使用正确的参数格式

### 阶段6: 修复聊天页面API问题 ✅ 已完成
1. 修复`message.js`中缺失的`getChatHistoryApi`函数
2. 修复`NewChatWindow.vue`中的API调用，使用正确的API路径和参数格式
3. 确保所有聊天页面相关的API调用与后端API文档一致

## 修复结果 ✅ 已完成
所有前端API使用问题已修复完成，前端视图现在正确使用后端API文档中定义的接口，确保前后端数据交互的一致性和可靠性。

## 最终验证 ✅ 已完成
经检查所有修改的文件，确认所有API修复均已正确实现：
- auth.js: getUserInfo() 使用 /api/auth/me，updateUserInfo() 使用 /api/users/me ✅
- chat.js: 所有聊天相关API已修复为正确的 /api/v1/chats/* 路径 ✅
- message.js: 添加了 getChatHistoryApi 等缺失函数，修复了API路径 ✅
- 所有Vue组件文件中的API调用已同步更新 ✅

## 修复详情
1. **认证相关API**:
   - 修复了`auth.js`中的`getUserInfo()`方法，从`/api/user/info`改为`/api/auth/me`
   - 修复了`auth.js`中的`updateUserInfo()`方法，从`/api/user/info`改为`/api/users/me`

2. **用户管理API**:
   - 修复了`user.js`中的`getUserList()`方法，从`/api/list`改为`/api/users`
   - 删除了`user.js`中重复的`getUserInfo()`和`updateUserInfo()`方法定义

3. **聊天相关API**:
   - 修复了`chat.js`中的`getChatList()`方法，从`/api/contacts`改为`/api/v1/chats`
   - 修复了`chat.js`中的`getChatMessages()`方法，直接使用`/api/v1/chats/{chatId}/messages`
   - 修复了`chat.js`中的`sendMessage()`方法，直接使用`/api/v1/chats/{chatId}/messages`
   - 更新了`ChatWindow.vue`中的消息类型字段，从`type`改为`messageType`

4. **群组相关API**:
   - 修复了`Groups.vue`中的API调用，从`api.group.joinGroup()`改为`api.group.applyToJoinGroup()`

5. **文章相关API**:
   - 修复了`Explore.vue`中的API调用，使用正确的参数格式传递分页参数

6. **聊天页面API**:
   - 添加了`message.js`中缺失的`getChatHistoryApi`函数，使用正确的API路径`/api/v1/chats/{chatId}/messages`
   - 修复了`NewChatWindow.vue`中的`loadChatHistory`函数，使用正确的API调用和参数格式
   - 修复了`NewChatWindow.vue`中的`handleMessageSent`函数，使用正确的API路径和参数格式
   - 修复了消息对象中的字段名，从`type`改为`messageType`
   - 添加了额外的聊天相关API函数：`createChat`、`markAsRead`、`deleteChat`和`addReaction`
