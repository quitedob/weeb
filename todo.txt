# Weeb项目任务清单

## 架构重构任务

### API统一化 - ✅ 已完成 (2025-10-26)
- ~~设计统一的聊天API，整合/api/v1/chats、/api/v1/message、/api/threads三套接口统一为/api/chats禁止添加v1或则v2~~
- ~~Chatcontroller.chatservice统一处理聊天业务逻辑~~
- ~~重构WebSocketMessageController，剥离业务逻辑，仅作为消息传输层~~
- ~~统一用户信息获取接口，整合/api/auth/me、/api/users/me等多个端点统一为/api/users/~~
- ~~制定API设计规范，统一URL命名约定和版本管理策略~~

### 权限系统重构
- 废弃UserLevel.java中的权限授予逻辑，统一使用RBAC系统
- 整合DatabaseInitializer、SystemPermissionInitializer、RolePermissionInitializer的权限初始化逻辑
- 创建SystemSecurityInitializer统一管理权限和角色初始化
- 移除fix_user_permissions.sql脚本，消除独立配置源
- 审计所有@PreAuthorize注解，确保权限定义完整一致

### 数据库管理优化
- 数据库确认和前端和后端的需求一样

## 功能模块修复

### 用户认证系统
- 重构AuthServiceImpl注册方法，确保用户创建和角色分配在同一事务中
- 创建UserCreationService专门处理用户创建业务流程
- 同步前后端验证逻辑，统一用户名、密码等字段的校验规则
- 修复默认角色分配失败时的静默错误处理

### 文章内容管理
- 在用户域创建专门的用户统计信息接口
- 重构usermain.vue组件，移除对文章域API的错误依赖
- 限制PUT /api/articles/{id}接口，禁止普通用户修改文章状态
- 创建管理员专用的文章状态管理接口
- 整合文章交互操作到统一子路径/api/articles/{id}/interactions

### 社交关系系统
- 制定联系人系统和关注系统合并策略
- 废弃ContactController，统一使用关注模型
- 实现互相关注逻辑判断好友关系
- 创建定期后台任务校准粉丝数数据一致性

### 搜索功能
- 为用户、文章、群组创建Elasticsearch文档模型
- 重构ArticleService和UserService的搜索方法，使用Elasticsearch替代LIKE查询
- 设计统一的SearchController和SearchService接口
- 在开发环境默认启用Elasticsearch

## 代码质量提升

### 静态代码分析
- 清理582个linter警告，移除未使用的导入、变量和方法
- 修复PasswordResetService等接口与实现不匹配问题
- 在CI/CD流程中加入代码质量门禁

### 功能实现完善
- 替换AIServiceImpl中的占位符逻辑，集成真实AI服务API
- 实现所有API文档中声明的查询过滤功能
- 将前端业务逻辑计算迁移到后端，通过DTO提供

### 前端架构优化
- 审计所有Vue组件的API调用，修复跨领域调用问题
- 重构stores/authStore.js，实现健壮的令牌刷新和跨标签页同步
- 优化axiosInstance.js的请求重试策略，仅对瞬态错误重试
- 实现前端验证逻辑与后端SecurityConstants的严格同步

## 系统集成与测试

### 功能开关管理
- 为未实现的AI功能添加Feature Flag
- 确保占位符API返回明确的"功能未实现"错误
- 建立功能开关的配置管理机制

### 文档与规范
- 更新API文档，确保与代码实现一致
- 制定数据库迁移操作规范
- 建立代码审查和架构治理流程

### 监控与日志
- 为废弃的API端点添加@Deprecated注解和调用日志
- 建立权限变更的审计日志机制
- 实现数据一致性监控和告警