<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.web.mapper.UserMapper">

    <!-- 结果映射：用户基本信息 -->
    <resultMap id="UserResultMap" type="com.web.model.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="sex" column="sex"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="userEmail" column="user_email"/>
        <result property="uniqueArticleLink" column="unique_article_link"/>
        <result property="uniqueVideoLink" column="unique_video_link"/>
        <result property="registrationDate" column="registration_date"/>
        <result property="ipOwnership" column="ip_ownership"/>
        <result property="type" column="type"/>
        <result property="avatar" column="avatar"/>
        <result property="nickname" column="nickname"/>
        <result property="badge" column="badge"/>
        <result property="loginTime" column="login_time"/>
        <result property="bio" column="bio"/>
        <result property="onlineStatus" column="online_status"/>
    </resultMap>

    <!-- 结果映射：用户完整信息（包含统计数据） -->
    <resultMap id="UserWithStatsResultMap" type="com.web.model.UserWithStats">
        <association property="user" javaType="com.web.model.User">
            <id property="id" column="id"/>
            <result property="username" column="username"/>
            <result property="password" column="password"/>
            <result property="sex" column="sex"/>
            <result property="phoneNumber" column="phone_number"/>
            <result property="userEmail" column="user_email"/>
            <result property="uniqueArticleLink" column="unique_article_link"/>
            <result property="uniqueVideoLink" column="unique_video_link"/>
            <result property="registrationDate" column="registration_date"/>
            <result property="ipOwnership" column="ip_ownership"/>
            <result property="type" column="type"/>
            <result property="avatar" column="avatar"/>
            <result property="nickname" column="nickname"/>
            <result property="badge" column="badge"/>
            <result property="loginTime" column="login_time"/>
            <result property="bio" column="bio"/>
            <result property="onlineStatus" column="online_status"/>
        </association>
        <association property="userStats" javaType="com.web.model.UserStats">
            <id property="userId" column="stats_user_id"/>
            <result property="fansCount" column="fans_count"/>
            <result property="totalLikes" column="total_likes"/>
            <result property="totalFavorites" column="total_favorites"/>
            <result property="totalSponsorship" column="total_sponsorship"/>
            <result property="totalArticleExposure" column="total_article_exposure"/>
            <result property="websiteCoins" column="website_coins"/>
            <result property="createdAt" column="stats_created_at"/>
            <result property="updatedAt" column="stats_updated_at"/>
        </association>
    </resultMap>

    <!-- 根据用户ID获取用户基本信息 -->
    <select id="selectById" parameterType="long" resultMap="UserResultMap">
        SELECT id, username, password, sex, phone_number, user_email,
               unique_article_link, unique_video_link, registration_date,
               ip_ownership, type, avatar, nickname, badge, 
               login_time, bio, online_status
        FROM user 
        WHERE id = #{userId}
    </select>

    <!-- 根据用户ID获取用户完整信息（包含统计数据） -->
    <select id="selectUserWithStatsById" parameterType="long" resultMap="UserWithStatsResultMap">
        SELECT u.id, u.username, u.password, u.sex, u.phone_number, u.user_email,
               u.unique_article_link, u.unique_video_link, u.registration_date,
               u.ip_ownership, u.type, u.avatar, u.nickname, u.badge, 
               u.login_time, u.bio, u.online_status,
               us.user_id as stats_user_id, us.fans_count, us.total_likes, us.total_favorites,
               us.total_sponsorship, us.total_article_exposure, us.website_coins,
               us.created_at as stats_created_at, us.updated_at as stats_updated_at
        FROM user u 
        LEFT JOIN user_stats us ON u.id = us.user_id 
        WHERE u.id = #{userId}
    </select>

    <!-- 批量获取用户基本信息 -->
    <select id="selectByIds" resultMap="UserResultMap">
        SELECT id, username, password, sex, phone_number, user_email,
               unique_article_link, unique_video_link, registration_date,
               ip_ownership, type, avatar, nickname, badge, 
               login_time, bio, online_status
        FROM user 
        WHERE id IN
        <foreach collection="userIds" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </select>

    <!-- 批量获取用户完整信息（包含统计数据） -->
    <select id="selectUsersWithStatsByIds" resultMap="UserWithStatsResultMap">
        SELECT u.id, u.username, u.password, u.sex, u.phone_number, u.user_email,
               u.unique_article_link, u.unique_video_link, u.registration_date,
               u.ip_ownership, u.type, u.avatar, u.nickname, u.badge, 
               u.login_time, u.bio, u.online_status,
               us.user_id as stats_user_id, us.fans_count, us.total_likes, us.total_favorites,
               us.total_sponsorship, us.total_article_exposure, us.website_coins,
               us.created_at as stats_created_at, us.updated_at as stats_updated_at
        FROM user u 
        LEFT JOIN user_stats us ON u.id = us.user_id 
        WHERE u.id IN
        <foreach collection="userIds" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </select>

    <!-- 根据用户名获取用户完整信息（包含统计数据） -->
    <select id="selectUserWithStatsByUsername" parameterType="string" resultMap="UserWithStatsResultMap">
        SELECT u.id, u.username, u.password, u.sex, u.phone_number, u.user_email,
               u.unique_article_link, u.unique_video_link, u.registration_date,
               u.ip_ownership, u.type, u.avatar, u.nickname, u.badge, 
               u.login_time, u.bio, u.online_status,
               us.user_id as stats_user_id, us.fans_count, us.total_likes, us.total_favorites,
               us.total_sponsorship, us.total_article_exposure, us.website_coins,
               us.created_at as stats_created_at, us.updated_at as stats_updated_at
        FROM user u 
        LEFT JOIN user_stats us ON u.id = us.user_id 
        WHERE u.username = #{username}
    </select>

    <!-- 获取用户列表（分页支持） -->
    <select id="selectUserList" resultMap="UserResultMap">
        SELECT id, username, password, sex, phone_number, user_email,
               unique_article_link, unique_video_link, registration_date,
               ip_ownership, type, avatar, nickname, badge,
               login_time, bio, online_status
        FROM user 
        <where>
            <if test="type != null">
                AND type = #{type}
            </if>
            <if test="onlineStatus != null">
                AND online_status = #{onlineStatus}
            </if>
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%', #{username}, '%')
            </if>
        </where>
        ORDER BY 
        <choose>
            <when test="orderBy != null and orderBy == 'registration_date'">
                registration_date DESC
            </when>
            <when test="orderBy != null and orderBy == 'login_time'">
                login_time DESC
            </when>
            <otherwise>
                type DESC, id DESC
            </otherwise>
        </choose>
    </select>

    <!-- 获取用户列表（包含统计数据，分页支持） -->
    <select id="selectUserListWithStats" resultMap="UserWithStatsResultMap">
        SELECT u.id, u.username, u.sex, u.phone_number, u.user_email,
               u.unique_article_link, u.unique_video_link, u.registration_date,
               u.ip_ownership, u.type, u.avatar, u.nickname, u.badge, 
               u.login_time, u.bio, u.online_status,
               us.user_id as stats_user_id, us.fans_count, us.total_likes, us.total_favorites,
               us.total_sponsorship, us.total_article_exposure, us.website_coins,
               us.created_at as stats_created_at, us.updated_at as stats_updated_at
        FROM user u 
        LEFT JOIN user_stats us ON u.id = us.user_id 
        <where>
            <if test="type != null">
                AND u.type = #{type}
            </if>
            <if test="onlineStatus != null">
                AND u.online_status = #{onlineStatus}
            </if>
            <if test="username != null and username != ''">
                AND u.username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="minFansCount != null">
                <![CDATA[AND us.fans_count >= #{minFansCount}]]>
            </if>
            <if test="minTotalLikes != null">
                <![CDATA[AND us.total_likes >= #{minTotalLikes}]]>
            </if>
        </where>
        ORDER BY 
        <choose>
            <when test="orderBy != null and orderBy == 'fans_count'">
                us.fans_count DESC
            </when>
            <when test="orderBy != null and orderBy == 'total_likes'">
                us.total_likes DESC
            </when>
            <when test="orderBy != null and orderBy == 'registration_date'">
                u.registration_date DESC
            </when>
            <when test="orderBy != null and orderBy == 'login_time'">
                u.login_time DESC
            </when>
            <otherwise>
                u.type DESC, u.id DESC
            </otherwise>
        </choose>
    </select>

    <!-- 更新用户基本信息（不包含统计数据） -->
    <update id="updateUser" parameterType="com.web.model.User">
        UPDATE user
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
            <if test="nickname != null">
                nickname = #{nickname},
            </if>
            <if test="bio != null">
                bio = #{bio},
            </if>
            <if test="phoneNumber != null">
                phone_number = #{phoneNumber},
            </if>
            <if test="userEmail != null">
                user_email = #{userEmail},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="uniqueArticleLink != null">
                unique_article_link = #{uniqueArticleLink},
            </if>
            <if test="uniqueVideoLink != null">
                unique_video_link = #{uniqueVideoLink},
            </if>
            <if test="ipOwnership != null">
                ip_ownership = #{ipOwnership},
            </if>
            <if test="badge != null">
                badge = #{badge},
            </if>
            <if test="loginTime != null">
                login_time = #{loginTime},
            </if>
            <if test="onlineStatus != null">
                online_status = #{onlineStatus},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 删除用户（注意：统计数据会通过外键级联删除） -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM user WHERE id = #{userId}
    </delete>

    <!-- 统计用户总数 -->
    <select id="countUsers" resultType="long">
        SELECT COUNT(*) FROM user
        <where>
            <if test="type != null">
                AND type = #{type}
            </if>
            <if test="onlineStatus != null">
                AND online_status = #{onlineStatus}
            </if>
        </where>
    </select>

    <!-- 检查用户名是否存在 -->
    <select id="existsByUsername" parameterType="string" resultType="boolean">
        SELECT COUNT(*) > 0 FROM user WHERE username = #{username}
    </select>

    <!-- 检查邮箱是否存在 -->
    <select id="existsByEmail" parameterType="string" resultType="boolean">
        SELECT COUNT(*) > 0 FROM user WHERE user_email = #{email}
    </select>

    <!-- 搜索用户（分页） -->
    <select id="searchUsers" resultMap="UserResultMap">
        SELECT id, username, password, sex, phone_number, user_email,
               unique_article_link, unique_video_link, registration_date,
               ip_ownership, type, avatar, nickname, badge,
               login_time, bio, online_status
        FROM user 
        WHERE (username LIKE CONCAT('%', #{keyword}, '%') 
               OR nickname LIKE CONCAT('%', #{keyword}, '%'))
        ORDER BY 
            CASE 
                WHEN username = #{keyword} THEN 1
                WHEN nickname = #{keyword} THEN 2
                WHEN username LIKE CONCAT(#{keyword}, '%') THEN 3
                WHEN nickname LIKE CONCAT(#{keyword}, '%') THEN 4
                ELSE 5
            END,
            id DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 统计搜索用户的总数 -->
    <select id="countSearchUsers" parameterType="string" resultType="long">
        SELECT COUNT(*) FROM user
        WHERE (username LIKE CONCAT('%', #{keyword}, '%')
               OR nickname LIKE CONCAT('%', #{keyword}, '%'))
    </select>

    <!-- 带过滤条件的搜索用户 -->
    <select id="searchUsersWithFilters" resultMap="UserResultMap">
        SELECT id, username, sex, phone_number, user_email,
               unique_article_link, unique_video_link, registration_date,
               ip_ownership, type, avatar, nickname, badge,
               login_time, bio, online_status
        FROM user u
        WHERE (u.username LIKE CONCAT('%', #{keyword}, '%')
               OR u.nickname LIKE CONCAT('%', #{keyword}, '%'))
        <if test="startDate != null and startDate != ''">
            <![CDATA[AND DATE(u.registration_date) >= #{startDate}]]>
        </if>
        <if test="endDate != null and endDate != ''">
            AND DATE(u.registration_date) &lt;= #{endDate}
        </if>
        ORDER BY
        <choose>
            <when test="sortBy == 'relevance'">
                CASE
                    WHEN u.username = #{keyword} THEN 1
                    WHEN u.nickname = #{keyword} THEN 2
                    WHEN u.username LIKE CONCAT(#{keyword}, '%') THEN 3
                    WHEN u.nickname LIKE CONCAT(#{keyword}, '%') THEN 4
                    ELSE 5
                END, u.id DESC
            </when>
            <when test="sortBy == 'time_desc'">
                u.registration_date DESC, u.id DESC
            </when>
            <when test="sortBy == 'time_asc'">
                u.registration_date ASC, u.id ASC
            </when>
            <when test="sortBy == 'name_asc'">
                u.username ASC, u.id ASC
            </when>
            <when test="sortBy == 'name_desc'">
                u.username DESC, u.id DESC
            </when>
            <otherwise>
                u.registration_date DESC, u.id DESC
            </otherwise>
        </choose>
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 统计带过滤条件的搜索用户数量 -->
    <select id="countSearchUsersWithFilters" resultType="long">
        SELECT COUNT(*) FROM user u
        WHERE (u.username LIKE CONCAT('%', #{keyword}, '%')
               OR u.nickname LIKE CONCAT('%', #{keyword}, '%'))
        <if test="startDate != null and startDate != ''">
            <![CDATA[AND DATE(u.registration_date) >= #{startDate}]]>
        </if>
        <if test="endDate != null and endDate != ''">
            AND DATE(u.registration_date) &lt;= #{endDate}
        </if>
    </select>

    <!-- 高级搜索用户（支持多维度过滤） -->
    <select id="searchUsersAdvanced" resultMap="UserResultMap">
        SELECT id, username, sex, phone_number, user_email,
               unique_article_link, unique_video_link, registration_date,
               ip_ownership, type, avatar, nickname, badge,
               login_time, bio, online_status
        FROM user u
        WHERE (u.username LIKE CONCAT('%', #{keyword}, '%')
               OR u.nickname LIKE CONCAT('%', #{keyword}, '%'))
        <if test="startDate != null and startDate != ''">
            <![CDATA[AND DATE(u.registration_date) >= #{startDate}]]>
        </if>
        <if test="endDate != null and endDate != ''">
            AND DATE(u.registration_date) &lt;= #{endDate}
        </if>
        <if test="userTypes != null and userTypes.size() > 0">
            AND u.type IN
            <foreach collection="userTypes" item="userType" open="(" separator="," close=")">
                #{userType}
            </foreach>
        </if>
        <if test="onlineStatus != null">
            AND u.online_status = #{onlineStatus}
        </if>
        ORDER BY
        <choose>
            <when test="sortBy == 'registration_date' and sortOrder == 'asc'">
                u.registration_date ASC, u.id ASC
            </when>
            <when test="sortBy == 'registration_date' and sortOrder == 'desc'">
                u.registration_date DESC, u.id DESC
            </when>
            <when test="sortBy == 'username' and sortOrder == 'asc'">
                u.username ASC, u.id ASC
            </when>
            <when test="sortBy == 'username' and sortOrder == 'desc'">
                u.username DESC, u.id DESC
            </when>
            <otherwise>
                u.registration_date DESC, u.id DESC
            </otherwise>
        </choose>
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 统计高级搜索用户数量 -->
    <select id="countSearchUsersAdvanced" resultType="long">
        SELECT COUNT(*) FROM user u
        WHERE (u.username LIKE CONCAT('%', #{keyword}, '%')
               OR u.nickname LIKE CONCAT('%', #{keyword}, '%'))
        <if test="startDate != null and startDate != ''">
            <![CDATA[AND DATE(u.registration_date) >= #{startDate}]]>
        </if>
        <if test="endDate != null and endDate != ''">
            AND DATE(u.registration_date) &lt;= #{endDate}
        </if>
        <if test="userTypes != null and userTypes.size() > 0">
            AND u.type IN
            <foreach collection="userTypes" item="userType" open="(" separator="," close=")">
                #{userType}
            </foreach>
        </if>
        <if test="onlineStatus != null">
            AND u.online_status = #{onlineStatus}
        </if>
    </select>

    <!-- 根据关键词搜索用户（包含统计数据，分页支持） -->
    <select id="selectUsersWithStatsByKeyword" resultMap="UserWithStatsResultMap">
        SELECT u.id, u.username, u.password, u.sex, u.phone_number, u.user_email,
               u.unique_article_link, u.unique_video_link, u.registration_date,
               u.ip_ownership, u.type, u.avatar, u.nickname, u.badge,
               u.login_time, u.bio, u.online_status,
               us.user_id as stats_user_id, us.fans_count, us.total_likes, us.total_favorites,
               us.total_sponsorship, us.total_article_exposure, us.website_coins,
               us.created_at as stats_created_at, us.updated_at as stats_updated_at
        FROM user u
        LEFT JOIN user_stats us ON u.id = us.user_id
        WHERE (u.username LIKE CONCAT('%', #{keyword}, '%')
               OR u.nickname LIKE CONCAT('%', #{keyword}, '%'))
        ORDER BY
            CASE
                WHEN u.username = #{keyword} THEN 1
                WHEN u.nickname = #{keyword} THEN 2
                WHEN u.username LIKE CONCAT(#{keyword}, '%') THEN 3
                WHEN u.nickname LIKE CONCAT(#{keyword}, '%') THEN 4
                ELSE 5
            END,
            u.id DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 根据关键词和状态搜索用户（包含统计数据，分页支持） -->
    <select id="selectUsersWithStatsByKeywordAndStatus" resultMap="UserWithStatsResultMap">
        SELECT u.id, u.username, u.password, u.sex, u.phone_number, u.user_email,
               u.unique_article_link, u.unique_video_link, u.registration_date,
               u.ip_ownership, u.type, u.avatar, u.nickname, u.badge,
               u.login_time, u.bio, u.online_status,
               us.user_id as stats_user_id, us.fans_count, us.total_likes, us.total_favorites,
               us.total_sponsorship, us.total_article_exposure, us.website_coins,
               us.created_at as stats_created_at, us.updated_at as stats_updated_at
        FROM user u
        LEFT JOIN user_stats us ON u.id = us.user_id
        WHERE (u.username LIKE CONCAT('%', #{keyword}, '%')
               OR u.nickname LIKE CONCAT('%', #{keyword}, '%'))
        <if test="status != null">
            AND u.status = #{status}
        </if>
        ORDER BY
            CASE
                WHEN u.username = #{keyword} THEN 1
                WHEN u.nickname = #{keyword} THEN 2
                WHEN u.username LIKE CONCAT(#{keyword}, '%') THEN 3
                WHEN u.nickname LIKE CONCAT(#{keyword}, '%') THEN 4
                ELSE 5
            END,
            u.id DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 获取用户列表（包含统计数据，分页支持） -->
    <select id="selectUsersWithStatsWithPaging" resultMap="UserWithStatsResultMap">
        SELECT u.id, u.username, u.password, u.sex, u.phone_number, u.user_email,
               u.unique_article_link, u.unique_video_link, u.registration_date,
               u.ip_ownership, u.type, u.avatar, u.nickname, u.badge,
               u.login_time, u.bio, u.online_status,
               us.user_id as stats_user_id, us.fans_count, us.total_likes, us.total_favorites,
               us.total_sponsorship, us.total_article_exposure, us.website_coins,
               us.created_at as stats_created_at, us.updated_at as stats_updated_at
        FROM user u
        LEFT JOIN user_stats us ON u.id = us.user_id
        ORDER BY u.id DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 获取用户列表（包含统计数据，分页支持，带状态过滤） -->
    <select id="selectUsersWithStatsWithPagingAndStatus" resultMap="UserWithStatsResultMap">
        SELECT u.id, u.username, u.password, u.sex, u.phone_number, u.user_email,
               u.unique_article_link, u.unique_video_link, u.registration_date,
               u.ip_ownership, u.type, u.avatar, u.nickname, u.badge,
               u.login_time, u.bio, u.online_status,
               us.user_id as stats_user_id, us.fans_count, us.total_likes, us.total_favorites,
               us.total_sponsorship, us.total_article_exposure, us.website_coins,
               us.created_at as stats_created_at, us.updated_at as stats_updated_at
        FROM user u
        LEFT JOIN user_stats us ON u.id = us.user_id
        <where>
            <if test="status != null">
                AND u.status = #{status}
            </if>
        </where>
        ORDER BY u.id DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 根据关键词统计用户数量 -->
    <select id="countUsersByKeyword" resultType="int">
        SELECT COUNT(*) FROM user
        WHERE (username LIKE CONCAT('%', #{keyword}, '%')
               OR nickname LIKE CONCAT('%', #{keyword}, '%'))
    </select>

    <!-- 根据关键词和状态统计用户数量 -->
    <select id="countUsersByKeywordAndStatus" resultType="int">
        SELECT COUNT(*) FROM user
        WHERE (username LIKE CONCAT('%', #{keyword}, '%')
               OR nickname LIKE CONCAT('%', #{keyword}, '%'))
        <if test="status != null">
            AND status = #{status}
        </if>
    </select>

    <!-- 统计用户总数 -->
    <select id="countUsers" resultType="int">
        SELECT COUNT(*) FROM user
    </select>

    <!-- 根据状态统计用户数量 -->
    <select id="countUsersByStatus" resultType="int">
        SELECT COUNT(*) FROM user
        <where>
            <if test="status != null">
                status = #{status}
            </if>
        </where>
    </select>

    <!-- 【核心修复一：添加缺失的insertUser SQL实现】 -->
    <!-- 插入新用户 -->
    <insert id="insertUser" parameterType="com.web.model.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `user` (
            username, password, sex, phone_number, user_email,
            unique_article_link, unique_video_link,
            registration_date, ip_ownership, `type`,
            avatar, nickname, badge, bio,
            login_time, online_status, `status`
            )
        VALUES (
            #{username}, #{password}, #{sex}, #{phoneNumber}, #{userEmail},
            #{uniqueArticleLink}, #{uniqueVideoLink},
            NOW(), #{ipOwnership}, #{type},
            #{avatar}, #{nickname}, #{badge}, #{bio},
            #{loginTime}, #{onlineStatus}, 1 )
    </insert>

    <!-- 统计活跃用户数量 -->
    <select id="countActiveUsers" resultType="int">
        SELECT COUNT(*) FROM user
        <![CDATA[WHERE login_time >= #{sinceTime}]]>
    </select>

    <!-- 统计新用户数量 -->
    <select id="countNewUsers" resultType="int">
        SELECT COUNT(*) FROM user
        <![CDATA[WHERE registration_date >= #{sinceTime}]]>
    </select>

    <!-- 统计被封禁用户数量 -->
    <select id="countBannedUsers" resultType="int">
        SELECT COUNT(*) FROM user
        WHERE status = 0
    </select>

    <!-- 兼容性查询方法 -->
    <select id="selectUserById" parameterType="long" resultMap="UserResultMap">
        SELECT id, username, password, sex, phone_number, user_email,
               unique_article_link, unique_video_link, registration_date,
               ip_ownership, type, avatar, nickname, badge,
               login_time, bio, online_status, status
        FROM user
        WHERE id = #{userId}
    </select>

    <select id="selectUserByUsername" parameterType="string" resultMap="UserResultMap">
        SELECT id, username, password, sex, phone_number, user_email,
               unique_article_link, unique_video_link, registration_date,
               ip_ownership, type, avatar, nickname, badge,
               login_time, bio, online_status, status
        FROM user
        WHERE username = #{username}
    </select>

    <!-- 统计用户文章数量 -->
    <select id="countUserArticles" parameterType="long" resultType="long">
        SELECT COUNT(*) FROM articles WHERE user_id = #{userId} AND status = 1
    </select>

    <!-- 统计用户消息数量 -->
    <select id="countUserMessages" parameterType="long" resultType="long">
        SELECT COUNT(*) FROM messages WHERE sender_id = #{userId}
    </select>

    <!-- 统计用户点赞数量 -->
    <select id="countUserLikes" parameterType="long" resultType="long">
        SELECT COUNT(*) FROM article_like WHERE user_id = #{userId}
    </select>

    <!-- 统计用户粉丝数量 -->
    <select id="countUserFollowers" parameterType="long" resultType="long">
        SELECT COUNT(*) FROM user_follow WHERE followed_id = #{userId}
    </select>

    <!-- 统计用户文章阅读量 -->
    <select id="countUserArticleViews" parameterType="long" resultType="long">
        SELECT COALESCE(SUM(exposure_count), 0) FROM articles WHERE user_id = #{userId} AND status = 1
    </select>

    <!-- 统计用户评论数量 -->
    <select id="countUserComments" parameterType="long" resultType="long">
        SELECT COUNT(*) FROM article_comment WHERE user_id = #{userId}
    </select>

    <!-- 根据等级统计用户数量 -->
    <select id="countUsersByLevel" parameterType="int" resultType="long">
        SELECT COUNT(*) FROM user WHERE type = #{level}
    </select>

</mapper>