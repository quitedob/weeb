<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.mapper.RolePermissionMapper">

    <!-- 结果映射 -->
    <resultMap id="RolePermissionResultMap" type="com.web.model.RolePermission">
        <id column="id" property="id"/>
        <result column="role_id" property="roleId"/>
        <result column="permission_id" property="permissionId"/>
        <result column="status" property="status"/>
        <result column="created_by" property="createdBy"/>
        <result column="updated_by" property="updatedBy"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="remark" property="remark"/>
        <!-- 关联查询的权限信息 -->
        <association property="permission" javaType="com.web.model.Permission">
            <id column="permission_id" property="id"/>
            <result column="permission_name" property="name"/>
            <result column="permission_code" property="code"/>
            <result column="permission_description" property="description"/>
        </association>
    </resultMap>

    <!-- 基础列 -->
    <sql id="Base_Column_List">
        id, role_id, permission_id, status, created_by, updated_by, created_at, updated_at, remark
    </sql>

    <!-- 关联查询列 -->
    <sql id="Join_Column_List">
        rp.id, rp.role_id, rp.permission_id, rp.status, rp.created_by, rp.updated_by,
        rp.created_at, rp.updated_at, rp.remark,
        p.name as permission_name, p.code as permission_code, p.description as permission_description
    </sql>

    <!-- 插入角色权限关联 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO role_permission (
            role_id, permission_id, status, created_by, updated_by, created_at, updated_at, remark
        ) VALUES (
            #{roleId}, #{permissionId}, #{status}, #{createdBy}, #{updatedBy},
            #{createdAt}, #{updatedAt}, #{remark}
        )
    </insert>

    <!-- 批量插入角色权限关联 -->
    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO role_permission (
            role_id, permission_id, status, created_by, updated_by, created_at, updated_at, remark
        ) VALUES
        <foreach collection="rolePermissions" item="item" separator=",">
            (#{item.roleId}, #{item.permissionId}, #{item.status}, #{item.createdBy},
             #{item.updatedBy}, #{item.createdAt}, #{item.updatedAt}, #{item.remark})
        </foreach>
    </insert>

    <!-- 更新角色权限关联 -->
    <update id="update">
        UPDATE role_permission
        SET role_id = #{roleId},
            permission_id = #{permissionId},
            status = #{status},
            updated_by = #{updatedBy},
            updated_at = #{updatedAt},
            remark = #{remark}
        WHERE id = #{id}
    </update>

    <!-- 删除角色权限关联 -->
    <delete id="deleteById">
        DELETE FROM role_permission WHERE id = #{id}
    </delete>

    <!-- 根据角色ID删除 -->
    <delete id="deleteByRoleId">
        DELETE FROM role_permission WHERE role_id = #{roleId}
    </delete>

    <!-- 根据权限ID删除 -->
    <delete id="deleteByPermissionId">
        DELETE FROM role_permission WHERE permission_id = #{permissionId}
    </delete>

    <!-- 批量删除 -->
    <delete id="batchDeleteByIds">
        DELETE FROM role_permission WHERE id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <!-- 根据ID查询 -->
    <select id="findById" resultMap="RolePermissionResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM role_permission WHERE id = #{id}
    </select>

    <!-- 根据角色ID查询 -->
    <select id="findByRoleId" resultMap="RolePermissionResultMap">
        SELECT
        <include refid="Join_Column_List"/>
        FROM role_permission rp
        LEFT JOIN permission p ON rp.permission_id = p.id
        WHERE rp.role_id = #{roleId} AND rp.status = 1
        ORDER BY rp.created_at DESC
    </select>

    <!-- 根据权限ID查询 -->
    <select id="findByPermissionId" resultMap="RolePermissionResultMap">
        SELECT
        <include refid="Join_Column_List"/>
        FROM role_permission rp
        LEFT JOIN permission p ON rp.permission_id = p.id
        WHERE rp.permission_id = #{permissionId} AND rp.status = 1
        ORDER BY rp.created_at DESC
    </select>

    <!-- 分页查询 -->
    <select id="findWithPaging" resultMap="RolePermissionResultMap">
        SELECT
        <include refid="Join_Column_List"/>
        FROM role_permission rp
        LEFT JOIN permission p ON rp.permission_id = p.id
        <where>
            <if test="roleId != null">
                AND rp.role_id = #{roleId}
            </if>
            <if test="permissionId != null">
                AND rp.permission_id = #{permissionId}
            </if>
            <if test="status != null">
                AND rp.status = #{status}
            </if>
        </where>
        ORDER BY rp.created_at DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 统计数量 -->
    <select id="count" resultType="long">
        SELECT COUNT(*)
        FROM role_permission
        <where>
            <if test="roleId != null">
                AND role_id = #{roleId}
            </if>
            <if test="permissionId != null">
                AND permission_id = #{permissionId}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <!-- 检查是否存在 -->
    <select id="existsByRoleIdAndPermissionId" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM role_permission
        WHERE role_id = #{roleId} AND permission_id = #{permissionId} AND status = 1
        LIMIT 1
    </select>

    <!-- 获取角色的所有权限ID -->
    <select id="findPermissionIdsByRoleId" resultType="long">
        SELECT permission_id
        FROM role_permission
        WHERE role_id = #{roleId} AND status = 1
        ORDER BY permission_id
    </select>

    <!-- 获取权限的所有角色ID -->
    <select id="findRoleIdsByPermissionId" resultType="long">
        SELECT role_id
        FROM role_permission
        WHERE permission_id = #{permissionId} AND status = 1
        ORDER BY role_id
    </select>

    <!-- 根据角色ID和状态查询 -->
    <select id="findByRoleIdAndStatus" resultMap="RolePermissionResultMap">
        SELECT
        <include refid="Join_Column_List"/>
        FROM role_permission rp
        LEFT JOIN permission p ON rp.permission_id = p.id
        WHERE rp.role_id = #{roleId} AND rp.status = #{status}
        ORDER BY rp.created_at DESC
    </select>

    <!-- 更新状态 -->
    <update id="updateStatus">
        UPDATE role_permission
        SET status = #{status}, updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 批量更新状态 -->
    <update id="batchUpdateStatus">
        UPDATE role_permission
        SET status = #{status}, updated_at = NOW()
        WHERE id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <!-- 统计角色的权限数量 -->
    <select id="countByRoleId" resultType="long">
        SELECT COUNT(*)
        FROM role_permission
        WHERE role_id = #{roleId} AND status = 1
    </select>

</mapper>