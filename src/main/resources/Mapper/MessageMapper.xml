<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.web.mapper.MessageMapper">

    <resultMap id="MessageResultMap" type="com.web.model.Message">
        <id column="id" property="id" />
        <result column="sender_id" property="senderId" />
        <result column="chat_id" property="chatId" />
        <result column="content" property="content" typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
        <result column="message_type" property="messageType" />
        <result column="read_status" property="readStatus" />
        <result column="is_recalled" property="isRecalled" />
        <result column="user_ip" property="userIp" />
        <result column="source" property="source" />
        <result column="reply_to_message_id" property="replyToMessageId" />
        <result column="is_show_time" property="isShowTime" />
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
    </resultMap>

    <select id="getPreviousShowTimeMsg" parameterType="map" resultMap="MessageResultMap">
        SELECT *
        FROM `message`
        WHERE (`sender_id` = #{userId} AND `chat_id` = #{targetId})
           OR (`sender_id` = #{targetId} AND `chat_id` = #{userId})
        ORDER BY `created_at` DESC
        LIMIT 1
    </select>

    <select id="record" parameterType="map" resultMap="MessageResultMap">
        SELECT *
        FROM `message`
        WHERE (`sender_id` = #{userId} AND `chat_id` = #{targetId})
           OR (`sender_id` = #{targetId} AND `chat_id` = #{userId})
           OR (`source` = 'Group' AND `chat_id` = #{targetId})
        ORDER BY `created_at` DESC
        LIMIT #{index}, #{num}
    </select>

</mapper>
